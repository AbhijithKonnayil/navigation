name: Shop-App-Android-Publish
on:
  workflow_dispatch:
    inputs:
      flavor:
        description: 'Flavor'     
        required: true
        default: 'devGlobal'
        type: choice
        options:
          - prodGlobal
          - stgGlobal
          - devGlobal
      type:
        description: 'Build Type - release/debug'     
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release
      release_notes:
        description: 'Release Notes'
      version_name:
        description: 'Version Name (major.minor.patch) [Fill this only if you need a specific version name] '
      version_code:
        description: 'Version Code [Fill this only if you need a specific build number, other wise latest build number for firebase will used]'
jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Decode Keystore
        env:
          ENCODED_PROPS: ${{ secrets.ENCODED_PROPS }}
          ENCODED_KEY: ${{ secrets.ENCODED_KEY }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS}} 
          ENCRYPTION_PROD_KEY: ${{secrets.ENCRYPTION_PROD_KEY}}
          ENCRYPTION_DEFAULT_KEY: ${{secrets.ENCRYPTION_DEFAULT_KEY}} 

        run: |
          echo "Setting keystore.."
          mkdir -p ../country_keys_test/uk/
          
          #echo $ENCODED_PROPS | base64 --decode -o ../country_keys_test/uk/shop_app.properties
          #echo $ENCODED_KEY | base64 --decode -o ../country_keys_test/uk/shop_app.keystore
          
          #Decode details and write to service.json
          echo $GOOGLE_APPLICATION_CREDENTIALS | base64 --decode -o service.json
          
          #write serice.json file path to GOOGLE_APPLICATION_CREDENTIALS env
          echo "GOOGLE_APPLICATION_CREDENTIALS=$(readlink -f service.json)" >> "$GITHUB_ENV"
          #export GOOGLE_APPLICATION_CREDENTIALS=$(readlink -f service.json)      
          
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
    
      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable' # 'dev', 'alpha', default to: 'stable'
          flutter-version: '3.10.6' # you can also specify exact version of flutter
    
      # Get flutter dependencies.
      - run: flutter pub get
      - uses: actions/checkout@v2
      
      
      # SDK Manager
      - name: Accept Android SDK licenses
        run: sdkmanager --licenses

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      # # SDK Manager
      # - name: Install Android SDK components
      #   run: sdkmanager "platform;android-30" "build-tools;30.0.3"

      # # Add SDK to Path
      # - name: Add SDK to Path
      #   run: |
      #     echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
      #     echo "$ANDROID_HOME/build-tools/30.0.3" >>  $GITHUB_PATH

      - name: AAPT
        run: aapt version
      #fastlane
      - name: Executing Fastlane 
        run: |
          cd  android
          echo GOOGLE_APPLICATION_CREDENTIALS
          echo $GOOGLE_APPLICATION_CREDENTIALS
          echo "fastlane publishBuild flavor:${{ github.event.inputs.flavor }} release_notes:${{ github.event.inputs.release_notes }} type:${{ github.event.inputs.type }}"
          #fastlane publishBuild flavor:${{ github.event.inputs.flavor }} release_notes:"${{ github.event.inputs.release_notes }}" type:${{ github.event.inputs.type }} version_name:${{ github.event.inputs.version_name }} version_code:${{ github.event.inputs.version_code }} enc_prod_key:"${{secrets.ENCRYPTION_PROD_KEY}}" enc_default_key:"${{secrets.ENCRYPTION_DEFAULT_KEY}}"
